syntax = "proto3";

// Then the compiler also creates a separate .java file for each top-level message,
// enumeration, and service declared in the .proto file.
option java_package = "cl.ucn.fondef.sata.mini.grpc";

import "domain.proto";

// Estas son las peticiones que se enviaran desde "Backend Application"
// hasta el "Central Core" para que pueda manejar la base de datos
service WebCoreCommuService {
  rpc authenticate(CredencialesEntityReq) returns (SesionEntityReply){}

  rpc addUsuario(UsuarioEntityReq)  returns (MensajeReply) {}
  rpc getUsuario(RutEntityReq)  returns (UsuarioEntityReply) {}
  rpc getUsuarios(EmptyReq) returns (UsuariosEntityReply) {}
  rpc updateUsuario(UsuarioEntityReq)  returns (MensajeReply) {}

  rpc addEquipo(EquipoEntityReq)  returns (MensajeReply){}
  rpc updateEquipo(EquipoEntityReq)  returns (MensajeReply){}

  rpc getEquipo(IdElementoConRutReq)  returns (EquipoEntityReply) {}
  rpc getEquipos(RutEntityReq)  returns (EquiposEntityReply) {}
  rpc getValvulasEquipo(IdElementoReq) returns (ComponentesEquipoReply) {}

  rpc uploadArchivo(stream ArchivoEntityReq)  returns (MensajeReply){}
  rpc getArchivos(IdElementoReq)  returns (stream ArchivosEntityReply){}

  rpc addSimulacion(SimulacionReq)  returns (MensajeReply){}
  rpc getSimulacion(IdElementoConRutReq) returns (SimulacionReply){}
  rpc getSimulaciones(RutEntityReq) returns (SimulacionesReply){}
  rpc getSecuenciasComponente(IdElementoReq) returns (SecuenciasComponenteEquipoReply) {}

  rpc getEjecucion(IdElementoConRutReq) returns (EjecucionReply){}
  rpc getEjecuciones(RutEntityReq) returns (EjecucionesReply){}

  rpc getRegistros(RutEntityReq) returns (RegistrosReply){}

  // va de la mano con la funcion (1) del CoreBoardCommuService
  rpc startSimulacion(StartSimulacionReq) returns (MensajeReply){}

  // esta funcion busca obtener los equipos que estan corriendo una simulacion
  rpc getEquiposTrabajando(EmptyReq) returns (EquiposEntityReply){}

  rpc getValoresGrafico(EstadoGraficoUsuarioReq) returns (LecturaSensoresReply) {}

  // Nuevas funciones de este Capstone en conjunto con los Diagramas de Secuencias
  rpc getSensores (SensoresEquipoEntityReq) returns (SensoresEquipoEntityReply) {}

  rpc getSimulacionesEjecutadas (DatosSimulacionesEquipoMesReq) returns (SimulacionesEquipoMesReply) {}

  rpc getDatosResumen (DatosSimulacionReq) returns (ResumenSimulacionReply) {}

  rpc getMedidas (DatosEjecucionSensorReq) returns (MedidasEjecucionSensorReply) {}

  rpc getUltimaMedida (DatosEjecucionUltimaMedidaReq) returns (UltimaMedidaReply) {}

  rpc getUltimasMedidas (UltimosDatosEjecucionReq) returns (UltimasMedidasEjecucionReply) {}

  rpc getUmbralesPorSensor (UmbralesSensorReq) returns (UmbralesSensorReply) {}
}
