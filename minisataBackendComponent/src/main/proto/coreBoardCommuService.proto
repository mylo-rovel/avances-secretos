syntax = "proto3";

// Then the compiler also creates a separate .java file for each top-level message,
// enumeration, and service declared in the .proto file.
option java_package = "cl.ucn.fondef.sata.mini.grpc";

import "domain.proto";

// Estas son las peticiones que se enviaran entre el "Central Core"
// y el Componente Raspi para manejar el hardware
service CoreBoardCommuService {
  // (1)
  // cliente: central core
  rpc startSimulacion(SimulacionBoardReq) returns (MensajeReply){}

  // (2)
  // cliente: raspberry => enviaremos datos constantemente
  rpc sendLecturasSensores(LecturaSensoresReq) returns (EmptyReq) {}

  // Esta llamada se ejecuta al iniciar el servicio del board(raspberry)
  // cliente: raspberry
  rpc sendMensajeEncendido (SaludoBoardReq)  returns (SaludoBoardReply) {}

  // Esta llamada se ejecuta al terminar la ejecucion planeada
  // cliente: raspberry
  rpc sendMensajeTerminoEjecucion (AvisoTerminoEjecucionReq)  returns (EmptyReq) {}
}